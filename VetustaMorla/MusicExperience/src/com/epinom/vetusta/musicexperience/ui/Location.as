package com.epinom.vetusta.musicexperience.ui{	import br.com.stimuli.loading.BulkLoader;		import caurina.transitions.Tweener;		import com.epinom.vetusta.musicexperience.data.DataModel;	import com.epinom.vetusta.musicexperience.vos.LocationVO;		import flash.display.Bitmap;	import flash.display.DisplayObject;	import flash.display.MovieClip;	import flash.display.Stage;	import flash.events.Event;	import flash.geom.Point;	import flash.net.URLRequest;
	public class Location	{		private var _isDataUserLoaded:Boolean;		private var _bulkLoader:BulkLoader;				private var _vo:LocationVO;		private var _userImage:Bitmap;		private var _pin:MovieClip;		private var _messageMarker:MovieClip;				private var _globalDisplayObject:Stage;		private var _localDisplayObject:MovieClip;				public function Location(globalDisplayObject:Stage, localDisplayObject:MovieClip) 		{			_bulkLoader = null;			_isDataUserLoaded = false;						_vo = null;			_userImage = null;			_pin = null;			_messageMarker = null;						_globalDisplayObject = globalDisplayObject;			_localDisplayObject = localDisplayObject;		}				public function get vo():LocationVO { return _vo; }		public function set vo(value:LocationVO):void { _vo = value; }				public function get userImage():Bitmap { return _userImage; }		public function set userImage(value:Bitmap):void { _userImage = value; }				public function get pin():MovieClip { return _pin; }		public function set pin(value:MovieClip):void { _pin = value; }				public function get messageMarker():MovieClip { return _messageMarker; }		public function set messageMarker(value:MovieClip):void { 			_messageMarker = value;		}				public function showMessageMarker(stage:Stage):void 		{			// Si los datos del usuario NO se han cargado con anterioridad			if(_isDataUserLoaded == false)			{				// Para cargar los datos del usuario se necesita un marcador asociado con los componentes donde se pondran los datos				if(_messageMarker != null)				{					// Si la imagen no ha sido cargada anteriormente					if(_userImage == null) 					{						// Creando cargador multiple						_bulkLoader = new BulkLoader("LocationBulkloader-" + _vo.id);						_bulkLoader.logLevel = BulkLoader.LOG_INFO;												// Adicionando url de la imagen del usuario para la descarga						_bulkLoader.add(new URLRequest(DataModel.URL_ABSOLUTE_FOR_FILES + _vo.imageName), { id:_vo.imageName, preventCache:true});												// Configurando detectores de eventos						_bulkLoader.addEventListener(BulkLoader.COMPLETE, onLoadUserImageHandler);						_bulkLoader.addEventListener(BulkLoader.ERROR, onErrorHandler);												// Iniciando carga de imagen						_bulkLoader.start();					}										// Actualizando variable de control de carga de datos del usuario en el marcador					_isDataUserLoaded = true;				}				else {					throw new Error("Message marker undefined...");				}			}						// Si se tiene el objeto de localizacion			if(_vo != null)			{				// Definiendo variable para el calculo en tiempo real de las coordenadas globales a partir de las locales				var localPoint:Point = new Point(_vo.localX, _vo.localY);				var globalPoint:Point;												// Calculando el punto global, en tiempo real, segun las coordenadas locales				if(_localDisplayObject != null)					globalPoint = _localDisplayObject.localToGlobal(localPoint);				else					throw new Error("Local display object is undefined...");								// Deteniendo indicador de actividad del marcador				(_messageMarker.activityIndicator as MovieClip).visible = false;								// Adicionando imagen 				if(_userImage)					(_messageMarker.image as MovieClip).addChild(_userImage);								// Asignando los datos del usuario a su marcador asociado 				_messageMarker.name_dtxt.text = _vo.userName;				_messageMarker.message_dtxt.text = _vo.message;				_messageMarker.world_dtxt.text = _vo.world;								// Estableciendo coordenadas del marcador				_messageMarker.x = globalPoint.x;				_messageMarker.y = globalPoint.y;				_messageMarker.alpha = 0;								// Trazas				trace("localPoint: ", localPoint);				trace("globalPoint: ", globalPoint);			}			else {				throw new Error("Location object undefined...");			}						// Adicionando marcador al movieclip padre pasado por parametro			if(_globalDisplayObject != null)				_globalDisplayObject.addChild(_messageMarker);						// Mostrando el marcador asociado con los datos del usuario ya cargados			Tweener.addTween(_messageMarker, {alpha:1, time:.5, transition:"linear"});		}				public function closeMessageMarker():void 		{			// Mostrando el marcador asociado con los datos del usuario ya cargados			Tweener.addTween(_messageMarker, {alpha:0, time:.5, transition:"linear", onComplete:function():void {				// Eliminando marcador del movieclip padre pasado por parametro				_globalDisplayObject.removeChild(_messageMarker);				trace("Marker eliminado...");			}});		}				private function onLoadUserImageHandler(evt:Event):void		{			trace("Location->onLoadUserImageHandler");						// Desactivando detectores de eventos			_bulkLoader.removeEventListener(BulkLoader.COMPLETE, onLoadUserImageHandler);			_bulkLoader.removeEventListener(BulkLoader.ERROR, onErrorHandler);						// Obteniendo imagen del usuario			_userImage = _bulkLoader.getBitmap(_vo.imageName);						// Deteniendo indicador de actividad del marcador			(_messageMarker.activityIndicator as MovieClip).visible = false;						// Adicionando imagen 			(_messageMarker.image as MovieClip).addChild(_userImage);		}				private function onErrorHandler(evt:Event):void {				throw new Error(evt);		}	}}