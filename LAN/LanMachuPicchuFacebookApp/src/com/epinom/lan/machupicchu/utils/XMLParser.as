/** * ... * XMLParser * Parseador de un fichero XML. * Segun la aplicacion en cuestion, se utiliza para convertir un fichero XML de configuracion, en objetos contenedores de datos (VOs) *  * @author Ernesto Pino Martínez * @date 20/09/2010 */package com.epinom.lan.machupicchu.utils{	import com.epinom.lan.machupicchu.data.ConstellationGallery;	import com.epinom.lan.machupicchu.vos.ItemGalleryVO;	public class XMLParser	{		public function XMLParser() {}				public static function parseConstellationGalleryXML(galleryXML:XML):void		{			trace("XMLParser->parseConstellationGalleryXML()");						// Destruyendo los datos anteriores, si los habia			ConstellationGallery.getInstance().destructor();						// Recuperando valores 			ConstellationGallery.getInstance().pageNumber = int(galleryXML.pageNumber);			ConstellationGallery.getInstance().totalPages = int(galleryXML.totalPages);			ConstellationGallery.getInstance().prevButtonActive = StringUtils.stringToBoolean(galleryXML.prevButtonActive);			ConstellationGallery.getInstance().nextButtonActive = StringUtils.stringToBoolean(galleryXML.nextButtonActive);			ConstellationGallery.getInstance().viewMyConstellationButtonActive = StringUtils.stringToBoolean(galleryXML.viewMyConstellationButtonActive);						try			{				// Recorriendo elementos de la galeria 				var galleryXMLList:XMLList = galleryXML.gallery;				for each(var item:XML in galleryXMLList.elements())				{					// Creando objeto de datos y almacenando valores					var itemGalleryVO:ItemGalleryVO = new ItemGalleryVO();					itemGalleryVO.id = String(item.id);					itemGalleryVO.name = String(item.name);					itemGalleryVO.author = String(item.author);					itemGalleryVO.urlImage = String(item.urlImage);					itemGalleryVO.voted = StringUtils.stringToBoolean(item.voted);										// Adicionando objeto de datos a la lista de datos					ConstellationGallery.getInstance().gallery.push(itemGalleryVO);				}						} catch (e:Error) { throw new Error("Parser error: " + e.toString()); }		}	}}